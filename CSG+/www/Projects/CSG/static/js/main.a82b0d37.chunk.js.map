{"version":3,"sources":["constants/settings.js","components/Home.js","components/Schedule.js","components/ScheduleReview.js","components/CourseCard.js","components/ListOfCourses.js","components/AddClassInfo.js","components/SelectOptions.js","components/AdminTableRow.js","components/AdminTable.js","components/Admin.js","components/Login.js","components/Register.js","components/LogAccess.js","components/AdminAccess.js","components/Footer.js","components/Sections.js","components/ClassDetail.js","App.js","reportWebVitals.js","index.js"],"names":["config","path","scriptServer","Home","className","id","Component","Schedule","course","this","props","obj","filePath","settings","course_syl","scope","course_title","course_alpha","course_num","section_num","instructor_first_name","instructor_last_name","class_start","class_end","class_days","href","target","rel","ScheduleReview","state","userSchedule","userID","localStorage","getItem","setState","axios","post","then","result","status","data","catch","error","console","log","map","object","i","length","CourseCard","setCourse","bind","setItem","course_id","onClick","to","pathname","courseProps","alpha","num","ListOfCourses","allCourses","courseList","AddClassInfo","courseTitle","courseAlpha","courseNumber","courseSection","courseStart","courseEnd","courseDays","instructor","syllabusFile","errorMessage","enterCourseTitle","enterCourseAlpha","enterCourseNumber","enterCourseSection","enterCourseStart","enterCourseEnd","enterCourseDays","enterInstructor","attachSyllabus","handleAddClass","removeErrorMessage","e","value","files","field","document","getElementById","fileName","name","innerHTML","courseObj","number","title","classObj","section","start","end","days","preventDefault","formData","FormData","key","append","item","headers","success","message","reset","onSubmit","htmlFor","type","placeholder","onChange","required","min","max","maxLength","minLength","accept","animationIn","animationOut","durationOut","SelectOptions","options","user_id","last_name","first_name","AdminTableRow","method","schedule_id","AdminTable","schedule","printSechedule","Admin","userList","userName","handleUserSelect","handleSectionRemove","get","selectedIndex","text","delSection","updated","filter","userObj","alert","Login","enterEmail","enterPassword","handleLogin","showError","email","password","firstName","loggedIn","classList","contains","remove","eField","pwField","add","loginObj","is_admin","adminRole","handleUser","Register","enterFirstName","enterLastName","enterConfirmPassword","handleSubmit","passwordCheck","clearErrorStyles","confirmPassword","passwordsMatch","registered","pw1","pw2","confPwField","user","LogAccess","logStatus","handleLogOut","AdminAccess","adminStatus","Footer","admin","logout","year","Date","getFullYear","src","Sections","courseSections","logged","methods","sections","favorite","fav","j","class_id","printSections","ClassDetail","allSections","favoriteClass","handleClear","handleFavorite","courseID","radios","getElementsByClassName","checked","sectionObj","updateSchedule","schedObj","App","handleUserChange","handleLogOutState","userId","isAdmin","fname","clear","basename","alt","exact","component","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a82b0d37.chunk.js","sourcesContent":["\nlet assetPath;\nlet script;\n\n/**\n * Setting asset path for images based on Node process environment\n * Need absolute path / for development.\n * \n * Setting scripts path here in case I deploy this somewhere else at some point\n */\nif(process.env.NODE_ENV === \"production\") {\n    assetPath =  \"\";\n    script = \"http://localhost\";\n}\nelse if(process.env.NODE_ENV === \"development\"){\n    assetPath = \"/\";\n    script = \"http://localhost\";\n}\n\n\nconst config = {\n    path: assetPath,\n    scriptServer: script,\n}\n\n\nexport default config;","import React, {Component} from 'react';\nimport settings from \"../constants/settings.js\";\n\nexport default class Home extends Component {\n    \n    render() {\n        return(\n            <div className='container'>\n      <main id='mainContent'>\n        <div className='row'>\n          <div className='col-12'>\n            <div className='row mt-5'>\n\n              <div className='col-sm-6 col-md-4'>\n                <div className='textHeading'>\n                  <h3>Course Library</h3>\n                </div>\n                <div className='textPlace'>\n                  <ul>\n                    <li>Access courses tab to view</li>\n                    <li>Course list accessible to everyone</li>\n                    <li>Organized by low to high difficulty</li>\n                  </ul>\n                </div>\n\n              </div>\n              <div className='col-sm-6 col-md-4'>\n                <div className='textHeading'>\n                  <h3>Course Sections</h3>\n                </div>\n                <div className='textPlace'>\n                  <ul>\n                    <li>Must be registered to view</li>\n                    <li>Section contains optional link to syllabi</li>\n                    <li>Favorite a section to add to your schedule</li>\n                  </ul>\n                </div>\n\n              </div>\n              <div className='col-sm-6 col-md-4'>\n                <div className='textHeading'>\n                  <h3>User Schedule</h3>\n                </div>\n                <div className='textPlace'>\n                  <ul>\n                    <li>View your schedule of \"favorited\" courses</li>\n                    <li>Review course syllabus</li>\n                    <li>Organized by class start time</li>\n                  </ul>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n      </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport settings from \"../constants/settings.js\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nexport default class Schedule extends Component {\n\n    //Simple render to bring back all of our schedule info per user\n    render() {\n        \n        //Wow, let and const are two totally different beasts :0\n        let course = this.props.obj;\n\n        const filePath = settings.scriptServer + \"/csg_scripts/syllabi/\" + course.course_syl;\n\n        return (\n\n            <tr id='classTuple'>\n            <th scope=\"row\">{course.course_title}</th>\n                <td>{course.course_alpha}{course.course_num}</td>\n                <td>{course.section_num}</td>\n                <td>{course.instructor_first_name} {course.instructor_last_name}</td>\n                <td>{course.class_start}-{course.class_end}</td>\n                <td>{course.class_days}</td>\n                {\n                    //If syllabus is empty, else\n                    course.course_syl === \"\" ?\n        \n                    <td>N/A</td>\n                    :\n                    <td><a href={filePath} target=\"_blank\" rel=\"noopener\">{course.course_syl}</a></td>\n                }\n            </tr>\n        )\n    }\n}","import axios from \"axios\";\nimport React, {Component} from \"react\";\nimport Schedule from \"./Schedule\";\nimport settings from \"../constants/settings.js\";\n\nexport default class ScheduleReview extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            userSchedule: [],\n            userID: null,\n        }\n\n    }\n\n    componentDidMount() {\n\n        //Make sure we have a user logged in\n        if(localStorage.getItem(\"user_id\") != null) {\n            //Update state\n            this.setState({\n                userID: localStorage.getItem(\"user_id\"),\n            }, () =>\n                //Fire the axios call\n                axios.post(settings.scriptServer + \"/csg_scripts/getUserSchedule.php\", this.state.userID)\n                \n                    .then(result => {\n\n                        if(result.status == 200) {\n                            this.setState({\n                                userSchedule: result.data,\n                            })\n                        }\n                        \n                    })\n                    .catch(error => {\n                        console.log(error);\n                    }))\n        }\n        else {\n            this.setState({\n                userSchedule: [],\n            })\n        }\n    }\n\n    //Line out a function that will print all my section rows for me. Thanks, Scarlett\n    userSchedule() {\n        return this.state.userSchedule.map(function(object, i) {\n            return <Schedule obj={object} key={i} />;\n        })\n    }\n\n\n    render() {\n\n        const {userSchedule} = this.state;\n\n        return (\n            <>\n            <main id='mainContent'>\n                <div className='pageFunctionTitle'>\n                    <h2>Schedule Review</h2>\n                </div>\n            <table className=\"table mt-4\" id='scheduleTable'>\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col-2\">Title</th>\n                        <th scope=\"col\">Course</th>\n                        <th scope=\"col\">Section</th>\n                        <th scope=\"col\">Instructor</th>\n                        <th scope=\"col\">Time</th>\n                        <th scope=\"col\">Days</th>\n                        <th scope=\"col\">Syllabus</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                        {\n                            userSchedule.length > 0\n                            ?\n                            this.userSchedule()\n                            :\n                            \"No schedule, mate ;) better build one soon!\"\n                        }\n                    </tbody>\n                </table>\n                </main>\n                </>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {BrowserRouter as Route, Switch, Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default class CourseCard extends Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.setCourse = this.setCourse.bind(this);\n    }\n\n    //Set the course ID in local storage. Since the child component can't see \n    //state on page refresh, we need to store a value to see on section view.\n    setCourse() {\n        localStorage.setItem(\"courseID\", this.props.course.course_id);\n        localStorage.setItem(\"courseTitle\", this.props.course.course_title);\n    }\n\n    render() {\n\n        const course = this.props.course;\n        return(\n            <div className=\"col-sm-12 col-md-6 col-lg-4\">\n\n            <div className=\"card mt-3\">\n                <div className=\"card-header bg-dark\">\n                    <h4 className=\"card-title\">{course.course_alpha}{course.course_num}</h4>\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"card-text mb-5\">{course.course_title}</p>\n                    <Link className='btn btn-primary' onClick={this.setCourse}\n                        to={{ //Pass the course selected as an object through the link\n                            pathname: '/course_sections',\n                            courseProps: {\n                                id: course.course_id,\n                                alpha: course.course_alpha,\n                                num: course.course_num,\n                            },\n                        }}>View Sections\n                    </Link>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}","import axios from \"axios\";\nimport React, {Component} from \"react\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport CourseCard from './CourseCard';\nimport settings from \"../constants/settings.js\";\n\n\nexport default class ListOfCourses extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            allCourses: [],\n        }\n\n        this.courseList = this.courseList.bind(this);\n    }\n\n    componentDidMount() {\n        //Fire axios call on page load to bring back list of all courses\n        axios.post(settings.scriptServer + '/csg_scripts/getCourses.php')\n            .then(result => {\n \n                this.setState({\n                    allCourses: result.data\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    courseList() {\n        return this.state.allCourses.map(function (object, i) {\n            return <CourseCard key={object.course_id} course={object} />\n        })\n    }\n    \n\n    \n\n    render() {\n\n        return (\n            <>\n            <main id='mainContent'>\n                        <div className='pageFunctionTitle'>\n                            <h2>Course Listing</h2>\n                        </div>\n                        <div className='courseListing'>\n                            <div className='row'>                            \n                            {\n                                this.state.allCourses.length > 0\n                                ?\n                                this.courseList()\n                                :\n                                ''\n                            }\n                            </div>\n                        </div>\n                    </main>\n            </>\n            \n        )\n    }\n}","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport settings from \"../constants/settings.js\";\nimport {AnimateOnChange} from 'react-animation';\n\nexport default class AddClassInfo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courseTitle: null,\n            courseAlpha: null,\n            courseNumber: null,\n            courseSection: null,\n            courseStart: null,\n            courseEnd: null,\n            courseDays: null,\n            instructor: null,\n            syllabusFile: null,\n            errorMessage: null,\n        }\n\n        //Bind functions\n        this.enterCourseTitle = this.enterCourseTitle.bind(this);\n        this.enterCourseAlpha = this.enterCourseAlpha.bind(this);\n        this.enterCourseNumber = this.enterCourseNumber.bind(this);\n        this.enterCourseSection = this.enterCourseSection.bind(this);\n        this.enterCourseStart = this.enterCourseStart.bind(this);\n        this.enterCourseEnd = this.enterCourseEnd.bind(this);\n        this.enterCourseDays = this.enterCourseDays.bind(this);\n        this.enterInstructor = this.enterInstructor.bind(this);\n        this.attachSyllabus = this.attachSyllabus.bind(this);\n        this.handleAddClass = this.handleAddClass.bind(this);\n        this.removeErrorMessage = this.removeErrorMessage.bind(this);\n    }\n\n\n/* --------------- FUNCTIONS TO PULL FORM INFORMATION ON EVENT -------------- */\n    enterCourseTitle(e) {\n        this.removeErrorMessage();\n        this.setState({courseTitle: e.target.value,});\n    }\n\n    enterCourseAlpha(e) {\n        this.removeErrorMessage();\n        this.setState({courseAlpha: e.target.value,});\n    }\n\n    enterCourseNumber(e) {\n        this.removeErrorMessage();\n        this.setState({courseNumber: e.target.value,});\n    }\n\n    enterCourseSection(e) {\n        this.removeErrorMessage();\n        this.setState({courseSection: e.target.value});\n    }\n\n    enterCourseStart(e) {\n        this.removeErrorMessage();\n        this.setState({courseStart: e.target.value,});\n    }\n\n    enterCourseEnd(e) {\n        this.removeErrorMessage();\n        this.setState({courseEnd: e.target.value});\n    }\n\n    enterCourseDays(e) {\n        this.removeErrorMessage();\n        this.setState({courseDays: e.target.value});\n    }\n\n    enterInstructor(e) {\n        this.removeErrorMessage();\n        this.setState({instructor: e.target.value});\n    }\n\n    attachSyllabus(e) {\n        //Set state variable\n        this.setState({syllabusFile: e.target.files[0]});\n        var field = document.getElementById(\"fileLabel\");\n        //Now change info on form\n        var files = e.target.files;\n\n        if(files) {\n            var fileName = files[0].name;\n            field.innerHTML = fileName;\n        } else {\n            field.innerHTML = \"Upload Syllabus\";\n        }   \n    }\n\n    //Remove any error handling if people try to input data after message was shown\n    removeErrorMessage() {\n        if(this.state.errorMessage !== null) {\n            this.setState({\n                errorMessage: '',\n            });\n        }\n    }\n\n    handleAddClass(e) {\n        //Destructure state variables for easy access\n        const {courseAlpha, \n                courseNumber, \n                courseTitle, \n                courseStart, \n                courseEnd,\n                courseDays,\n                courseSection,\n                instructor,\n                syllabusFile,} = this.state;\n\n        const courseObj = {\n            alpha: courseAlpha,\n            number: courseNumber,\n            title: courseTitle,\n        }\n\n        const classObj = {\n            section: courseSection,\n            instructor: instructor,\n            start: courseStart,\n            end: courseEnd,\n            days: courseDays, \n        }\n\n        e.preventDefault();\n\n        if(courseEnd <= courseStart) {\n            this.setState({\n                errorMessage: \"Class end time cannot be before class start time. Check time entry.\"\n            })\n            return false;\n        }\n\n        //Create formdata object so we can append the img to it\n        let formData = new FormData();\n\n        //Iterate through course and class objects to load form data\n        for(var key in courseObj) {\n            formData.append(key, courseObj[key]);\n        }\n\n        for(var item in classObj) {\n            formData.append(item, classObj[item]);\n        }\n\n        //Handle entries for no syllabus\n        if(syllabusFile !== null) {\n            //Add the syllabus file\n            formData.append('file', syllabusFile, syllabusFile.name);\n        }\n        \n        //Fire an axios POST with all of our information, take care of logic on php side\n        axios.post(settings.scriptServer + '/csg_scripts/addClass.php', formData, {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        })\n            .then(result => {\n\n                //If we failed to upload any of our form data, update the error state variable\n                if(result.data.success === false) {\n                    this.setState({\n                        errorMessage: result.data.message,\n                    });\n                }\n                else\n                {\n                    //Clear the form\n                    document.getElementById(\"addClassInfo\").reset();\n                    var field = document.getElementById(\"fileLabel\");\n                    field.innerHTML = \"Upload Syllabus\";\n                }\n            })\n            .catch(error => console.log(error))\n    }\n\n    render() {\n        return (\n            <>\n            <main id='mainContent'>\n                <div className='pageFunctionTitle'>\n                    <h2>Add Class Info</h2>\n                </div>\n                <form id=\"addClassInfo\" className='my-5' onSubmit={this.handleAddClass}>\n                    <div className='row'>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"courseTitle\">Course Title</label>\n                            <input type=\"text\" className=\"form-control\" id=\"courseTitleField\" placeholder=\"Ex: Advanced Web\" onChange={this.enterCourseTitle} required/>\n                        </div>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"Course Alpha\">Course Alpha</label>\n                            <input type=\"text\" className=\"form-control\" id=\"courseAlphaField\" placeholder=\"Ex: CIT\" onChange={this.enterCourseAlpha} required/>\n                        </div>\n                    </div>\n                    \n                    <div className='row'>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"Course Alpha\">Course Number</label>\n                            <input type=\"number\" className=\"form-control\" id=\"courseNumberField\" min=\"100\" max=\"999\" placeholder=\"Ex: 416\" onChange={this.enterCourseNumber} required/>\n                        </div>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"courseSectionField\">Course Section</label>\n                            <input type=\"number\" className=\"form-control\" id=\"courseSectionField\" min=\"100\" max=\"199\" placeholder=\"Ex: 100\" onChange={this.enterCourseSection} required/>\n                        </div>\n                    </div>\n\n                    <div className='row'>\n                        \n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"startTimeField\">Start Time</label>\n                            <input type=\"number\" className=\"form-control\" id=\"startTimeField\" placeholder=\"Ex: 800\" min=\"0800\" max=\"2400\" onChange={this.enterCourseStart}required/>\n                            <small id=\"timeHelp\" className=\"form-text text-muted\">Schedules use 24 hr time, Ex: 1400 = 2pm</small>\n                        </div>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"endTimeField\">End Time</label>\n                            <input type=\"number\" className=\"form-control\" id=\"endTimeField\" placeholder=\"Ex: 915\" min=\"0850\" max=\"2400\" onChange={this.enterCourseEnd}required/>\n                            <small id=\"timeHelp\" className=\"form-text text-muted\">Schedules use 24 hr time, Ex: 1400 = 2pm</small>\n                        </div>\n                    </div>\n\n                    <div className='row'>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"classDaysField\">Days</label>\n                            <input type=\"text\" className=\"form-control\" id=\"classDaysField\" maxLength=\"8\" minLength=\"2\" placeholder=\"Ex: MWF - TR\" onChange={this.enterCourseDays} required/>\n                        </div>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"courseInstructorField\">Instructor</label>\n                            <input type=\"text\" className=\"form-control\" id=\"courseInstructorField\" placeholder=\"Ex: Brian Morgan\" onChange={this.enterInstructor} required/>\n                            <small id=\"nameHelp\" className=\"form-text text-muted\">Please enter instructor FirstName LastName</small>\n                        </div>\n                    </div>\n                    <div className=\"form-group col-md-12 mt-3\">\n                        <input type=\"file\" accept=\"image/jpeg, image/gif, image/png, application/pdf, .doc,.docx\" className=\"custom-file-input\" id=\"customFile\" onChange={this.attachSyllabus}/>\n                        <label id=\"fileLabel\" className=\"custom-file-label\" htmlFor=\"customFile\">Upload Syllabus</label>\n                    </div>\n                    <div className='addCourseError'>\n                        <AnimateOnChange\n                        animationIn=\"bounceIn\"\n                        animationOut=\"bounceOut\"\n                        durationOut={500}\n                        >\n                            <h4 className='errorMssg'>{this.state.errorMessage}</h4>\n                        </AnimateOnChange>\n                    </div>\n                    \n\n                    <div id='courseInfoSubmitDiv' className='d-flex justify-content-around py-5'>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                    \n                </form>\n            </main>\n            </>\n        )\n    }\n}","import React, {Component} from 'react';\n\nexport default class SelectOptions extends Component {\n\n    \n\n    render () {\n\n        let options = this.props.obj;\n\n        return (\n            <option value={options.user_id}>{options.last_name}, {options.first_name}</option>\n        )\n    }\n}","import React, {Component} from \"react\";\n\n\nexport default class AdminTableRow extends Component {\n\n\n    render() {\n\n        const section = this.props.section;\n        const method = this.props.method;\n\n        return(\n            <tr className='classTuple'>\n            <th scope=\"row\">{section.course_title}</th>\n                <td><div>{section.course_alpha}{section.course_num}</div></td>\n                <td>{section.section_num}</td>\n                <td>{section.instructor_first_name} {section.instructor_last_name}</td>\n                <td>{section.class_start}-{section.class_end}</td>\n                <td>{section.class_days}</td>\n                <td><button value={section.schedule_id} className='btn btn-danger' onClick={method}>Delete</button></td>\n            </tr>\n        )\n    }\n}","import React, {Component} from 'react';\nimport AdminTableRow from \"./AdminTableRow\";\n\nexport default class AdminTable extends Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n\n    /**\n     * printSchedule() iterates through schedule property sent \n     * from parent and returns each course section as an independent\n     * component row\n     * @returns Component\n     */\n    printSechedule() {\n        const method = this.props.method;\n\n        return this.props.schedule.map(function(object, i) {\n            return <AdminTableRow key={i} section={object} method={method}/>\n        })\n    }\n\n\n    render() {\n\n        return(\n            <table className=\"table mt-4\" id='adminTable'>\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col-2\">Title</th>\n                        <th scope=\"col\">Course</th>\n                        <th scope=\"col\">Section</th>\n                        <th scope=\"col\">Instructor</th>\n                        <th scope=\"col\">Time</th>\n                        <th scope=\"col\">Days</th>\n                        <th scope=\"col\">Remove</th>\n                    </tr>\n                </thead>\n                    <tbody>\n                        {\n                            this.props.schedule.length > 0 ?\n                            this.printSechedule():\n                            \"\"\n                        }\n                    </tbody>\n                </table>\n        )\n    }\n}","import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport settings from \"../constants/settings.js\";\nimport SelectOptions from \"./SelectOptions\";\nimport AdminTable from \"./AdminTable\";\n\n\nexport default class Admin extends Component {\n\n    constructor(props) {\n        super(props)\n\n        //Store the student list as a state variable\n        this.state = {\n            userList: [],\n            userName: '',\n            userSchedule: [],\n            section: null,\n        }\n\n        this.handleUserSelect = this.handleUserSelect.bind(this);\n        this.handleSectionRemove = this.handleSectionRemove.bind(this);\n    }\n\n    componentDidMount() {\n        \n        //Fire axios call to get all users\n        axios.get(settings.scriptServer + \"/csg_scripts/getUsers.php\")\n            .then(result => {\n                \n                //Result branching\n                result.status === 200 ? this.setState({\n                    userList: result.data,\n                })\n                :\n                console.log(result.status)\n\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    /**\n     * userList() takes no parameters.\n     * Maps state array to return a list of components which is comprised\n     * of all user names within the database.\n     * @returns COMPONENT\n     */\n    userList() {\n        return this.state.userList.map(function(object, i) {\n            return <SelectOptions obj={object} key={i} />;\n        })\n    }\n\n    /**\n     * handleUserSelect(event) - Handles on change event and updates state of\n     * userID. Fires axios call to return an array of sections / courses for a \n     * user's schedule\n     * @param {onChange event} e \n     */\n    handleUserSelect(e) {\n\n        this.setState({\n            userID: e.target.value,\n            userName: e.target[e.target.selectedIndex].text,\n        }, () => {\n\n\n            axios.post(settings.scriptServer + \"/csg_scripts/getUserSchedule.php\", this.state.userID)\n                .then(result => {\n\n                    if(result.status === 200) {\n                        this.setState({\n                            userSchedule: result.data,\n                        })\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        })\n    }\n\n    /**\n     * handleSectionRemove(event) - This method is sent down two children components\n     * in order to 1.) Update state array variable of user schedule and 2.) Add appropriate\n     * data to the database to persist changes.\n     * @param {onClick event} e \n     * @returns updated state array and fires axios call\n     * \n     * Lots of comments here because it took me a minute to figure out the architecture.\n     * If anyone looks at this in a repo or otherwise, let me know I'm a dummy and to remove\n     * all the comments in the function block\n     */\n    handleSectionRemove(e) {\n        //Bring in current schedule state\n        let schedule = this.state.userSchedule;\n        //Section to delete\n        let delSection = e.target.value;\n        //Use the copy from above to filter the course we deleted\n        //Store updated course schedule after deletion\n        let updated = schedule.filter(course => course.schedule_id != delSection);\n\n        //Return the updated state to re render and fire axios call to make permanent\n        return( \n                this.setState({\n                    userSchedule: updated,\n                    section: delSection,\n                }, () => {\n\n                    //Create object to send to script\n                    let userObj = {\n                        userID: this.state.userID,\n                        section: delSection,\n                    }\n                    //Fire axios call and handle appropriately\n                    axios.post(settings.scriptServer + \"/csg_scripts/updateSchedule.php\", userObj)\n                        .then(result => {\n                            console.log(result)\n                        })\n                        .catch(error => {\n                            alert(error)\n                        }) \n                })\n        )\n    }\n\n\n    render() {\n        const {userList, userSchedule} = this.state;\n        return (\n            <>\n            <form className=\"form-group boogerSelectDiv\" >\n                <label htmlFor=\"studentSelect\">\n                    <h4 className=\"mt-3\">Select a disappointment:</h4> \n                </label>\n                <select onChange={this.handleUserSelect} className=\"form-control\" id=\"studentSelect\">\n                    <option value='-1'>Select User</option>\n                    {\n                        userList.length > 0 ?\n                        this.userList():\n                        ''\n                    }\n                </select>\n            </form>\n            {\n                userSchedule.length > 0 ?\n                <AdminTable schedule={userSchedule} method={this.handleSectionRemove} />\n                :\n                ''\n            }\n            </>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {AnimateOnChange} from 'react-animation';\nimport axios from 'axios';\nimport settings from \"../constants/settings.js\";\nimport { Redirect } from 'react-router';\n\nexport default class Login extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.enterEmail = this.enterEmail.bind(this);\n        this.enterPassword = this.enterPassword.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.showError = this.showError.bind(this);\n\n        this.state = {\n            email: null,\n            password: null,\n            firstName: null,\n            errorMessage: '',\n            loggedIn: null,\n        }\n    }\n\n    enterEmail(e) {\n        this.setState({email: e.target.value});\n\n        if(document.getElementById('loginEmail').classList.contains('checkField')) {\n            document.getElementById('loginEmail').classList.remove('checkField');\n            document.getElementById('loginPassword').classList.remove('checkField');\n            this.setState({errorMessage: ''});\n        }\n    }\n\n    enterPassword(e) {\n        this.setState({password: e.target.value});\n\n        if(document.getElementById('loginEmail').classList.contains('checkField')) {\n            document.getElementById('loginEmail').classList.remove('checkField');\n            document.getElementById('loginPassword').classList.remove('checkField');\n            this.setState({errorMessage: ''});\n        }\n    }\n\n    showError() {\n        var eField = document.getElementById('loginEmail');\n        var pwField = document.getElementById('loginPassword');\n\n        eField.classList.add('checkField');\n        pwField.classList.add('checkField');\n\n        this.setState({errorMessage: \"Incorrect credentials. Check validity or register new user.\"});\n    }\n\n    handleLogin(e) {\n\n        //Destructure state variables\n        const {email, password} = this.state;\n\n        e.preventDefault();\n\n        const loginObj = {\n            email: email,\n            password: password,\n        }\n\n\n        \n        //Send data via axios\n        //Check settings in constants dir for explanation\n        axios.post(settings.scriptServer + '/csg_scripts/loginUser.php', loginObj)\n            .then(result => {\n                //If 200 \"OK\" set loggedIn state variable to redirect user and set storage\n                if(result.data !== 200) {\n\n                    if(result.data == null) {\n\n                        this.showError();\n                        return;\n                    }\n\n                    //Set local storage for the session\n                    localStorage.setItem('userName', result.data.first_name);\n                    localStorage.setItem('user_id', result.data.user_id);\n                    localStorage.setItem('userLoggedIn', \"true\");\n                    localStorage.setItem('role', result.data.is_admin);\n\n                    var adminRole = false;\n                    //Set admin boolean if appropriate\n                    if(localStorage.getItem('role') === \"1\") {\n                        adminRole = true;\n                    }\n\n\n                    //Call parent App() method to update state\n                    this.props.handleUser(result.data.first_name, adminRole);\n\n                    this.setState({\n                        loggedIn: true,\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n    }\n\n\n    render() {\n        //Conditionally render based on registration status\n        if(this.state.loggedIn) {\n            return <Redirect to={'/courses'} />\n        }\n\n        return(\n            <>\n            <main id='mainContent'>\n            <div className='pageFunctionTitle'>\n                    <h2>User Login</h2>\n                </div>\n                <form id=\"loginForm\" className='my-5' onSubmit={this.handleLogin}>\n                    <div className='row'>\n                        <div className=\"form-group col-md-12 col-lg-6\" >\n                            <label htmlFor=\"loginEmail\">User Email</label>\n                            <input type=\"email\" className=\"form-control\" onChange={this.enterEmail} id=\"loginEmail\" placeholder=\"Ex: student@marshall.live.edu\" required/>\n                        </div>\n                        <div className=\"form-group col-md-12 col-lg-6\" >\n                            <label htmlFor=\"loginPassword\">Password</label>\n                            <input type=\"password\" className=\"form-control\" onChange={this.enterPassword} id=\"loginPassword\" placeholder=\"Ex: password\" required/>\n                        </div>\n                    </div>\n                    <div className='passwordError'>\n                        <AnimateOnChange\n                        animationIn=\"bounceIn\"\n                        animationOut=\"bounceOut\"\n                        durationOut={500}\n                        >\n                        <h4 className='errorMssg'>{this.state.errorMessage}</h4>\n                        </AnimateOnChange>\n                    </div>           \n\n                    <div id='registrationSubmit' className='d-flex justify-content-around py-5'>\n                        <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n                    </div>\n                    \n                </form>\n            </main>\n            </>\n        )\n    }\n}","import React, {Component} from 'react'; \nimport {AnimateOnChange} from 'react-animation';\nimport axios from 'axios';\nimport settings from \"../constants/settings.js\";\nimport { Redirect } from 'react-router';\n\nexport default class Register extends Component {\n\n    constructor(props) {\n        super(props);\n\n        //Bind our component functions to component constructor\n        this.enterFirstName = this.enterFirstName.bind(this);\n        this.enterLastName = this.enterLastName.bind(this);\n        this.enterEmail = this.enterEmail.bind(this);\n        this.enterPassword = this.enterPassword.bind(this);\n        this.enterConfirmPassword = this.enterConfirmPassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.passwordCheck = this.passwordCheck.bind(this);\n        this.clearErrorStyles = this.clearErrorStyles.bind(this);\n\n        //Store state variables here\n        this.state = {\n            first_name: '',\n            last_name: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            passwordsMatch: true,\n            errorMessage: '',\n            registered: false,\n        }\n    }\n\n    //Define form field functions\n    enterFirstName(e) {\n        this.setState({first_name: e.target.value});\n    }\n\n    enterLastName(e) {\n        this.setState({last_name: e.target.value});\n    }\n\n    enterEmail(e) {\n        this.setState({email: e.target.value});\n    }\n\n    enterPassword(e) {\n        //If user starts inputting info and error handling has already been done, get rid of it\n        this.clearErrorStyles();\n        this.setState({password: e.target.value});\n        \n        \n    }\n\n    enterConfirmPassword(e) {\n        this.clearErrorStyles();\n        this.setState({confirmPassword: e.target.value});\n    }\n\n    clearErrorStyles() {\n        if(document.getElementById('registerPW').classList.contains('checkField')) {\n            document.getElementById('registerPW').classList.remove('checkField');\n            document.getElementById('registerConfirmPW').classList.remove('checkField');\n            this.setState({errorMessage: ''});\n        }\n    }\n\n\n    passwordCheck(pw1, pw2) {\n\n        //Declare these input fields here so branch access is easy\n        var pwField = document.getElementById('registerPW'); \n        var confPwField = document.getElementById('registerConfirmPW');\n\n        //Show error styling\n        if(pw1 !== pw2) {\n\n            pwField.classList.add('checkField');\n            confPwField.classList.add('checkField');\n\n            this.setState({errorMessage: \"Passwords do not match.\"});\n            \n            return false;\n\n        } else if(pw1 === pw2) {\n            //Remove error styling\n\n            if(pwField.classList.contains('checkField')) {\n                pwField.classList.remove('checkField');\n                confPwField.classList.remove('checkField');\n            }\n\n            return true;\n        }\n    }\n\n\n    //Submit form function\n    handleSubmit(e) {\n\n        //Prevent default form submission\n        e.preventDefault();\n\n        const {first_name, last_name, email, password, confirmPassword} = this.state;\n\n        let check = this.passwordCheck(password, confirmPassword);\n\n        if(check === false) {\n            return false;\n        }\n\n        const userObj = {\n            first_name: first_name,\n            last_name: last_name,\n            email: email,\n            password: password\n        }\n\n        //console.log(userObj);\n\n        //Send data via axios\n        //Check settings in constants dir for explanation\n        axios.post(settings.scriptServer + '/csg_scripts/addUser.php', userObj)\n            .then(result => {\n\n                //If 201 \"created\" set loggedIn state variable to redirect user\n                if(result.status === 201) {\n                    //Set local storage for the session\n                    localStorage.setItem('userName', first_name);\n                    localStorage.setItem('user_id', result.data.user);\n                    localStorage.setItem('userLoggedIn', \"true\");\n\n                    //Call parent App() method to update state\n                    this.props.handleUser(first_name, 0);\n\n                    this.setState({\n                        registered: true,\n                    });\n                }\n            })\n            .catch(error => {\n                alert(error);\n            });\n    }\n\n    render() {\n\n\n        //Conditionally render based on registration status\n        if(this.state.registered) {\n            return <Redirect to={'/courses'} />\n        }\n        return (\n        <>\n            <main id='mainContent'>\n                <div className='pageFunctionTitle'>\n                    <h2>User Registration</h2>\n                </div>\n                <form id=\"registrationForm\" className='my-5' onSubmit={this.handleSubmit}>\n                    <div className='row'>\n                        <div className=\"form-group col-md-12\" >\n                            <label htmlFor=\"registerEmail\">User Email</label>\n                            <input type=\"email\" className=\"form-control\" onChange={this.enterEmail} value={this.state.email} id=\"registerEmail\" placeholder=\"Ex: student@marshall.live.edu\" required/>\n\n                        </div>\n                    </div>\n                    \n                    <div className='row'>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"registerFirst\">First Name</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.enterFirstName} value={this.state.first_name} id=\"registerFirst\" placeholder=\"Ex: Peter\" required/>\n                        </div>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"registerLast\">Last Name</label>\n                            <input type=\"text\" className=\"form-control\" onChange={this.enterLastName} value={this.state.last_name} id=\"registerLast\" placeholder=\"Ex: Parker\" required/>\n                        </div>\n                    </div>\n\n                    <div className='row'>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"registerPW\">Password</label>\n                            <input type=\"password\" className=\"form-control\" onChange={this.enterPassword} value={this.state.password} id=\"registerPW\" placeholder=\"Password\" required />\n                        </div>\n                        <div className=\"form-group col-md-6 col-lg-6\" >\n                            <label htmlFor=\"registerConfirmPW\">Confirm Password</label>\n                            <input type=\"password\" className=\"form-control\" onChange={this.enterConfirmPassword} value={this.state.confirmPassword}id=\"registerConfirmPW\" placeholder=\"Password\" required/>\n                        </div>\n                    </div>\n                    <div className='passwordError'>\n                        <AnimateOnChange\n                        animationIn=\"bounceIn\"\n                        animationOut=\"bounceOut\"\n                        durationOut={500}\n                        >\n                        <h4 className='errorMssg'>{this.state.errorMessage}</h4>\n                        </AnimateOnChange>\n                    </div>\n                    \n\n                    <div id='registrationSubmit' className='d-flex justify-content-around py-5 form-group'>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </div>\n                </form>\n            \n            </main>\n        </>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {AnimateOnChange} from 'react-animation';\n\nexport default class LogAccess extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n\n        const props = this.props\n\n        if(props.logStatus == true) {\n            return(\n                <li className='nav-item'>\n                    <Link onClick={props.handleLogOut} className='nav-link' to={\"/\"}>\n                        Logout\n                    </Link>\n                </li>\n            )\n        } else {\n            return (\n                <>\n                    <AnimateOnChange\n                    animationIn=\"popIn\"\n                    animationOut=\"popOut\"\n                    durationOut={500}\n                    >\n                    <li className='nav-item'>\n                        <Link to={\"/login\"} className='nav-link'>\n                        Login\n                        </Link>\n                    </li>\n                    </AnimateOnChange>\n                \n                    <AnimateOnChange\n                    animationIn=\"popIn\"\n                    animationOut=\"popOut\"\n                    durationOut={500}\n                    >\n                    <li className='nav-item'>\n                        <Link to={\"/register\"} className='nav-link'>\n                        Register\n                        </Link>\n                    </li>\n                    </AnimateOnChange>\n                </>\n            )\n        }\n    }\n}","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {AnimateOnChange} from 'react-animation';\n\nexport default class AdminAccess extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n\n        const props = this.props\n\n        if(props.adminStatus === true) {\n            return(\n                <>\n                <AnimateOnChange\n                    animationIn=\"popIn\"\n                    animationOut=\"popOut\"\n                    durationOut={500}\n                    >\n                    <li className='nav-item'>\n                        <Link to={\"/add\"} className='nav-link'>\n                            Add Courses\n                        </Link>\n                    </li>\n                    </AnimateOnChange>\n                    <AnimateOnChange\n                    animationIn=\"popIn\"\n                    animationOut=\"popOut\"\n                    durationOut={500}\n                    >\n                    <li className='nav-item pull-right'>\n                        <Link to={\"/admin\"} className='nav-link'>\n                            Admin\n                        </Link>\n                    </li>\n                    </AnimateOnChange>\n                </>\n            )\n        }\n        else {\n            return('');\n        }\n    }\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LogAccess from './LogAccess';\nimport AdminAccess from './AdminAccess';\nimport settings from \"../constants/settings.js\";\n\nconst Footer = ({logStatus, adminStatus, handleLogOut}) => {\n\n    const log = logStatus;\n    const admin = adminStatus;\n    const logout = handleLogOut;\n\n    const d = new Date();\n    const year = d.getFullYear();\n    return(\n      <>\n      <footer className='footer navbar-static-bottom'>\n        <div className=\"container\">\n          <nav className='navbar navbar-expand-lg navbar-dark bg-dark footerNav'>\n            <div className='navbar-collapse' id='navbarSupportContent'>\n              <ul className='navbar-nav'>\n                <li className='nav-item'>\n                  <Link to={\"/\"} className='nav-link'>\n                    Home\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link to={\"/schedule\"} className='nav-link'>\n                    Schedule\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link to={\"/courses\"} className='nav-link'>\n                    Courses\n                  </Link>\n                </li>\n\n                <LogAccess logStatus={log} handleLogOut={logout} />\n                \n                <AdminAccess adminStatus={admin} />\n\n              </ul>\n            </div>\n          </nav>\n          <div id='builtWith' className='d-flex justify-content-center' >\n              <img id='reactPNG' src={settings.path + 'logo192.png'} />\n              <p id='builtWithP'>Built with React</p>\n              <img id='reactPNG' src={settings.path + 'logo192.png'} />\n          </div>\n          <div id='footTagLine' className='d-flex justify-content-center' >\n            <p>&copy; <strong>{year}</strong> BPC All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n      </>\n  \n    )\n  }\n\n  export default Footer;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport settings from \"../constants/settings.js\";\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nexport default class Sections extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            courseSections: null,\n            logged: null,\n            methods: null,\n        }\n    }\n\n    componentWillMount() {\n\n        this.setState({\n            courseSections: this.props.sections,\n            //Our handler for setting state of section in parent\n            favorite: this.props.fav,\n            section: this.props.section,\n            logged: localStorage.getItem(\"userLoggedIn\"),\n        })\n    }\n\n    /* -------------------------------------------------------------------------- */\n    /*                            PRINT COURSE SECTIONS                           */\n    /* -------------------------------------------------------------------------- */\n    /**\n    /**Parent method used to update state in parent\n     * Takes @param(object of all sections related to course, parent method)\n     */\n    printSections(sections, favorite) {\n        \n        return sections.map(function (i, j) {\n            //Set syllabi path\n            const filePath = settings.scriptServer + \"/csg_scripts/syllabi/\" + i.course_syl;\n            const logged = localStorage.getItem(\"userLoggedIn\");\n\n            return (\n                    <>\n                        <tr key={i.class_id} className='classTuple'>\n                        <th scope=\"row\">{i.section_num}</th>\n                            <td>{i.class_days}</td>\n                            <td>{i.class_start}</td>\n                            <td>{i.class_end}</td>\n                            <td>{i.instructor_first_name} {i.instructor_last_name}</td>\n                            {\n                                //If syllabus is empty, else\n                                i.course_syl === \"\" ?\n        \n                                    <td>N/A</td>\n                                    :\n                                    <td><a href={filePath} target=\"_blank\" rel=\"noopener\">{i.course_syl}</a></td>\n                            }\n                            {\n                                //If local storage for user log in isn't there, don't show radio\n                                logged === \"true\" ?\n                                <td><input className=\"sectionRadio\" type=\"radio\" name=\"favSection\" value={i.class_id} \n                                    onChange={favorite} /></td>\n                                :\n                                <td><Link to=\"/login\">Log in</Link></td>\n                            }\n                            \n                        </tr>\n                    </>\n            )\n        })\n    }\n\n\n    render() {\n        //Destructure to pass...\n        const {courseSections, favorite} = this.state;\n        //Catch methods to update state in parent\n\n        return(\n            this.printSections(courseSections, favorite)\n        )\n    }\n\n\n}","import axios from \"axios\";\nimport React, {Component} from \"react\";\nimport Sections from './Sections';\nimport settings from \"../constants/settings.js\";\n\nexport default class ClassDetail extends Component {\n\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            course_id: null,\n            courseTitle: null,\n            allSections: [],\n            errorMessage: null,\n            favoriteClass: null,\n            userID: null,\n        }\n\n        this.handleClear = this.handleClear.bind(this);\n        this.handleFavorite = this.handleFavorite.bind(this);\n    }\n\n    componentWillMount() {\n\n        //Grab local storage for CLOWNS that want to reload page.\n        //This actually works better, and I had no idea until I broke everything\n        //reloading pages to test.\n        const courseID = localStorage.getItem(\"courseID\");\n        const title = localStorage.getItem(\"courseTitle\");\n\n\n        //Fire our axios call to return all of the associated sections\n        //with this course\n        axios.post(settings.scriptServer + '/csg_scripts/getSections.php', courseID)\n            .then(result => {\n                if(result.status === 200)\n                {\n                    this.setState({\n                        course_id: courseID,\n                        allSections: result.data,\n                        courseTitle: title\n                    })\n                }\n                    \n                if(result.data.success === false)\n                {\n                    this.setState({\n                        errorMessage: result.data.message,\n                    })\n                }\n                \n            })\n            .catch(function (error){\n                console.log(error);\n            });\n    }\n\n    /**\n     * Handle the user clearing the section they had favorited for this course\n     * resets radio \"favorite\" button, and also removes appropriate course section\n     * from database table \"course schedule\"\n     * @returns boolean\n     */\n    handleClear(e) {\n\n        //Since we don't know which is checked, just reset them all\n        let radios = document.getElementsByClassName('sectionRadio');\n\n        //Iterate through radios\n        for(let i = 0; i < radios.length; i++)\n        {\n            //If a radio is checked, uncheck it\n            if(radios[i].checked === true) {\n\n                //Create an object to send to script\n                const sectionObj = {\n                    user: this.state.userID,\n                    section: radios[i].value,\n                }\n                //Fire an axios call to remove this section from the user's schedule\n                axios.post(settings.scriptServer + \"/csg_scripts/removeSection.php\", sectionObj)\n                    .then(result => {\n                        console.log(result.data.success);\n                        console.log(result.data.message);\n                        //Uncheck the radio button\n                        radios[i].checked = false;\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n            }\n        }\n        //Reset state back to null for favorite class\n        this.setState({\n            favoriteClass: null,\n        });\n    }\n\n    /**\n     * Simply handles the radio onChange event in child component\n     * updates state of favorite class and stores user id. After setting\n     * state variables, calls updateSchedule method\n     * @param {event} e \n     */\n    handleFavorite(e) {\n\n        //Update state so we can fire our axios call\n        return this.setState({\n            favoriteClass: e.target.value,\n            userID: localStorage.getItem(\"user_id\"),\n        }, () =>\n            //callback handler \n            this.updateSchedule());\n    }\n\n    /**\n     * updateSchedule - called from handleFavorite. Loads state variables\n     * into a JS object and sends to php script via axios to update user's\n     * class schedule\n     */\n    updateSchedule() {\n\n        //Create the object to send to script\n        let schedObj = {\n            course: this.state.course_id,\n            user: this.state.userID,\n            favorite: this.state.favoriteClass,\n        }\n\n        //Fire an axios call to update the user's schedule with new favorite\n        axios.post(settings.scriptServer + '/csg_scripts/addToSchedule.php', schedObj)\n            .then(result => {\n                console.log(result.data.success)\n                console.log(result.data.message)\n            })\n            .catch(error => {\n                console.log(error);\n            }) \n    }\n\n    render() {\n\n        const {allSections, courseTitle} = this.state;\n        const logged = localStorage.getItem(\"userLoggedIn\");\n\n        return(\n            <>\n            <div className=\"courseNameSections mt-5\">\n                <h4 id=\"courseTitleSections\">{courseTitle} Sections:</h4>\n            </div>\n                <table className=\"table mt-3\" id='scheduleTable'>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th scope=\"col\">Section</th>\n                            <th scope=\"col\">Days</th>\n                            <th scope=\"col\">Start</th>\n                            <th scope=\"col\">End</th>\n                            <th scope=\"col\">Instructor</th>\n                            <th scope=\"col\">Syllabus</th>\n                            <th scope=\"col\">Favorite</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            allSections.length > 0\n                            ?\n                            <Sections sections={allSections} fav={this.handleFavorite} />\n                            :\n                            \"Sections for this course have yet to be added. :(\"\n                        }\n                    </tbody>\n                </table>\n                {\n                    logged === \"true\" ?\n                    <div className=\"clearSectionsButtonHouse\">\n                        <button className='btn btn-danger' onClick={this.handleClear}>Clear Section</button>\n                    </div>\n                    :\n                    ''\n                }\n            </>\n        )\n    }\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport {ScheduleReview, \n        ListOfCourses, \n        AddClassInfo, \n        Admin, \n        Login, \n        Register, \n        Footer, \n        Home,\n        LogAccess,\n        AdminAccess,\n        ClassDetail} from './components';\nimport {AnimateOnChange} from 'react-animation';\nimport './App.css';\nimport settings from \"./constants/settings.js\";\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleLogOutState = this.handleLogOutState.bind(this);\n\n    this.state = {\n      userId: null,\n      userName: null,\n      loggedIn: false,\n      isAdmin: false,\n    };\n  }\n\n  componentDidMount() {\n    //Changes to component so we can change the document title\n    document.title = \"CSG+\";\n    const loggedIn = localStorage.getItem('userLoggedIn');\n\n    if(loggedIn === 'true') {\n\n      const userName = localStorage.getItem('userName');\n      const userId = localStorage.getItem('user_id');\n\n      this.setState({\n        userId: userId,\n        userName: userName,\n        loggedIn: true,\n      })\n      \n      if(userName === 'Admin') {\n        this.setState({\n          isAdmin: true,\n        })\n      }\n    }\n  }\n\n  //Update state method and pass through registration / sign in components\n  handleUserChange(fname, admin) {\n      \n    return this.setState({\n      userName: fname,\n      loggedIn: true,\n      isAdmin: admin,\n    })\n\n  }\n\n  handleLogOutState() {\n    //Use callback after setState to clear local storage\n    return this.setState({\n      userName: '',\n      loggedIn: false,\n      isAdmin: false,\n    }, () =>\n      localStorage.clear());\n  }\n\n  render() {\n    return (\n      <Router basename={\"Projects/CSG\"}>\n        <div className='flexWrapper'>\n          <div className='container contentContainer'>\n            <div id='titleBar' className='align-items-center justify-content-around mb-3'>\n              <div>\n                <h1 id='appTitle'>Course Schedule Generator +</h1>\n              </div>\n              <div>\n                <img id='csgNavLogo' src={settings.path + 'csgLogo.svg'}  alt='CSG logo'/> \n              </div>\n            </div>\n            <nav className='navbar navbar-expand-lg navbar-dark bg-dark' id='headerNav'>\n              <div className='navbar-collapse' id='navbarSupportContent'>\n                <ul className='navbar-nav'>\n                  <li className='nav-item'>\n                    <Link to={\"/\"} className='nav-link'>\n                      Home\n                    </Link>\n                  </li>\n                  <li className='nav-item'>\n                    <Link to={\"/schedule\"} className='nav-link'>\n                      Schedule\n                    </Link>\n                  </li>\n                  <li className='nav-item'>\n                    <Link to={\"/courses\"} className='nav-link'>\n                      Courses\n                    </Link>\n                  </li>\n                 \n                    <LogAccess logStatus={this.state.loggedIn} handleLogOut={this.handleLogOutState}/>\n\n                    <AdminAccess adminStatus={this.state.isAdmin} />\n                </ul>\n              </div>\n              {\n                this.state.loggedIn ?\n                <div className='nameTag'>\n                  <ul className='navbar-nav'>\n                  <AnimateOnChange\n                    animationIn=\"bounceIn\"\n                    animationOut=\"bounceOut\"\n                    durationOut={500}\n                    >\n                    <li className='nav-item welcomeMssg'>Welcome, <strong>{this.state.userName}</strong></li>\n                    </AnimateOnChange>\n                  </ul>\n                </div>\n                :\n                <div className='nameTag'>\n                  <ul className='navbar-nav'>\n                  <AnimateOnChange\n                    animationIn=\"bounceIn\"\n                    animationOut=\"bounceOut\"\n                    durationOut={500}\n                    >\n                    <li className='nav-item welcomeMssg'>Welcome to CSG+</li>\n                    </AnimateOnChange>\n                  </ul>\n                </div>\n              }\n              <div className='nameTag'></div>\n            </nav>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/schedule\" component={ScheduleReview}></Route>\n              <Route exact path=\"/courses\" component={ListOfCourses}></Route>\n              <Route exact path=\"/add\" component={AddClassInfo}></Route>\n              <Route exact path=\"/admin\" component={Admin}></Route>\n              <Route\n                path=\"/login\" \n                render={(props) => (<Login {...props} handleUser={this.handleUserChange} />)}/>\n              <Route\n                path=\"/register\"\n                render={(props) => (<Register {...props} handleUser={this.handleUserChange} />)}/>\n              <Route \n                path=\"/course_sections\" \n                render={(props) => (<ClassDetail {...props} />)}/>\n            </Switch>\n          </div>\n          <Footer logStatus={this.state.loggedIn} \n                  adminStatus={this.state.isAdmin} \n                  handleLogOut={this.handleLogOutState}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}